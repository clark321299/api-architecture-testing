{
	"info": {
		"_postman_id": "a3a25322-ad3c-427a-81c7-e9cfd0448055",
		"name": "API Architecture Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45066256",
		"_collection_link": "https://clark-9205200.postman.co/workspace/fd3a5645-e38b-4e8a-84a5-d7b8e99dbdac/collection/45066256-a3a25322-ad3c-427a-81c7-e9cfd0448055?action=share&source=collection_link&creator=45066256"
	},
	"item": [
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Перевірка статус-коду\r",
							"pm.test(\"Статус-код 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Перевірка часу відповіді\r",
							"pm.test(\"Час відповіді менше 1000мс\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"// Перевірка формату відповіді\r",
							"pm.test(\"Відповідь у форматі JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Перевірка структури даних\r",
							"pm.test(\"Відповідь містить масив користувачів\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(Array.isArray(jsonData)).to.be.true;\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							"\r",
							"// Перевірка обов'язкових полів\r",
							"pm.test(\"Користувачі мають обов'язкові поля\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.have.property('id');\r",
							"    pm.expect(jsonData[0]).to.have.property('name');\r",
							"    pm.expect(jsonData[0]).to.have.property('email');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Перевірка статус-коду\r",
							"pm.test(\"Статус-код 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Перевірка часу відповіді\r",
							"pm.test(\"Час відповіді менше 1000мс\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"// Перевірка формату відповіді\r",
							"pm.test(\"Відповідь у форматі JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Перевірка даних користувача\r",
							"pm.test(\"Перевірка даних користувача\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id', 1);\r",
							"    pm.expect(jsonData).to.have.property('name');\r",
							"    pm.expect(jsonData).to.have.property('email');\r",
							"    pm.expect(jsonData).to.have.property('username');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Перевірка статус-коду для створення\r",
							"pm.test(\"Створення успішне\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// Перевірка часу відповіді\r",
							"pm.test(\"Час відповіді менше 1000мс\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"// Перевірка формату відповіді\r",
							"pm.test(\"Відповідь у форматі JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Перевірка структури створеного ресурсу\r",
							"pm.test(\"Створений пост містить правильні дані\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.title).to.eql(\"Test Title\");\r",
							"    pm.expect(jsonData.body).to.eql(\"Test Body\");\r",
							"    pm.expect(jsonData.userId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Test Title\",\r\n  \"body\": \"Test Body\",\r\n  \"userId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Перевірка статус-коду для оновлення\r",
							"pm.test(\"Оновлення успішне\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Перевірка часу відповіді\r",
							"pm.test(\"Час відповіді менше 1000мс\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"// Перевірка формату відповіді\r",
							"pm.test(\"Відповідь у форматі JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"// Перевірка оновлених даних\r",
							"pm.test(\"Оновлений пост містить правильні дані\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('id', 1);\r",
							"    pm.expect(jsonData.title).to.eql(\"Updated Title\");\r",
							"    pm.expect(jsonData.body).to.eql(\"Updated Body\");\r",
							"    pm.expect(jsonData.userId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1,\r\n  \"title\": \"Updated Title\",\r\n  \"body\": \"Updated Body\",\r\n  \"userId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}